generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @unique @default(cuid())
  username String  @unique
  password String
  avatarId String?
  role     Role
  avatar   Avatar? @relation(fields: [avatarId], references: [id])
  spaces   Space[] @relation("UserSpaces")
}

model Avatar {
  id       String  @id @unique @default(cuid())
  imageUrl String?
  name     String?
  users    User[]
}

model Element {
  id            String          @id @unique @default(cuid())
  width         Int
  height        Int
  imageUrl      String
  static        Boolean         @default(true)
  spaceElements SpaceElements[]
  mapElements   MapElements[]
}

model Space {
  id            String          @id @unique @default(cuid())
  name          String
  height        Int?
  width         Int
  thumbnail     String?
  users         User[]          @relation("UserSpaces")
  spaceElements SpaceElements[]
}

model SpaceElements {
  id        String  @id @unique @default(cuid())
  elementId String
  spaceId   String
  x         Int
  y         Int
  element   Element @relation(fields: [elementId], references: [id])
  space     Space   @relation(fields: [spaceId], references: [id])
}

model Map {
  id          String        @id @unique @default(cuid())
  name        String
  height      Int
  width       Int
  thumbnail   String
  mapElements MapElements[]
}

model MapElements {
  id        String   @id @unique @default(cuid())
  mapId     String
  elementId String?
  x         Int?
  y         Int?
  map       Map      @relation(fields: [mapId], references: [id])
  element   Element? @relation(fields: [elementId], references: [id])
}

enum Role {
  Admin
  User
}
